#!/bin/bash\n# Setup script for ADR workflow testing\n\nproject_name=\"$1\"\nproject_path=\"$2\"\ncortex_path=\"/Users/simonjanke/Projects/cortex\"\n\necho \"🏗️  Setting up ADR workflow test project: $project_name\"\n\n# Copy ADR template from Cortex\ncp \"$cortex_path/00-Templates/ADR-Enhanced.md\" \"$project_path/templates/\"\n\n# Create test scenario data\ncat > \"$project_path/test-data/test-scenario.yaml\" << EOF\nscenario_name: \"ADR Workflow Validation\"\ndescription: \"Test complete ADR workflow from problem to decision\"\ntest_decision:\n  title: \"Test Database Technology Selection\"\n  context: \"Choose database technology for high-throughput application\"\n  options:\n    - name: \"PostgreSQL\"\n      pros: [\"ACID compliance\", \"Rich feature set\", \"Community support\"]\n      cons: [\"Single-node performance limits\", \"Complex scaling\"]\n    - name: \"MongoDB\"\n      pros: [\"Horizontal scaling\", \"Flexible schema\", \"High performance\"]\n      cons: [\"Eventual consistency\", \"Memory usage\", \"Learning curve\"]\n    - name: \"Redis\"\n      pros: [\"Extreme performance\", \"Simple operations\", \"Low latency\"]\n      cons: [\"Limited query capabilities\", \"Memory constraints\", \"Persistence complexity\"]\n  expected_confidence: 78\n  expected_decision: \"PostgreSQL\"\n  decision_factors:\n    - \"Data consistency requirements\"\n    - \"Team expertise\"\n    - \"Long-term maintenance\"\n    - \"Ecosystem integration\"\nEOF\n\n# Create test data sources\nmkdir -p \"$project_path/test-data/sources\"\n\ncat > \"$project_path/test-data/sources/performance-benchmarks.md\" << EOF\n# Database Performance Benchmarks\n\n## PostgreSQL Performance\n- **Throughput**: 15,000 TPS (transactions per second)\n- **Latency**: 2-5ms average\n- **Scaling**: Vertical scaling primary, horizontal with complexity\n\n## MongoDB Performance  \n- **Throughput**: 25,000 TPS (simple operations)\n- **Latency**: 1-3ms average\n- **Scaling**: Excellent horizontal scaling\n\n## Redis Performance\n- **Throughput**: 100,000+ TPS\n- **Latency**: <1ms average\n- **Scaling**: Cluster mode available\n\n*Source: Internal benchmarking 2024*\nEOF\n\ncat > \"$project_path/test-data/sources/expert-opinions.md\" << EOF\n# Expert Opinions on Database Selection\n\n## Database Architect Survey (2024)\n- **PostgreSQL**: Recommended by 67% for enterprise applications\n- **MongoDB**: Recommended by 23% for rapid development\n- **Redis**: Recommended by 10% for caching/session storage\n\n## Industry Analysis\n- **Gartner Report**: PostgreSQL leads in operational database management\n- **Stack Overflow Survey**: PostgreSQL most loved database 3 years running\n- **GitHub Usage**: PostgreSQL in 45% of open-source projects\n\n*Sources: Multiple industry reports*\nEOF\n\n# Create test execution script\ncat > \"$project_path/run-adr-test.sh\" << 'EOF'\n#!/bin/bash\n# ADR Workflow Test Execution\n\nproject_path=\"$(dirname \"$0\")\"\ntest_results_path=\"$project_path/results\"\n\necho \"🧪 Running ADR Workflow Test\"\necho \"📁 Project: $(basename \"$project_path\")\"\necho \"\"\n\n# Test results tracking\nall_tests_passed=true\n\n# Test 1: Template completeness\necho \"📋 Test 1: ADR Template Validation\"\nif [ -f \"$project_path/templates/ADR-Enhanced.md\" ]; then\n    echo \"  ✅ ADR template present\"\n    \n    # Check template sections\n    template_file=\"$project_path/templates/ADR-Enhanced.md\"\n    required_sections=(\"Context\" \"Problem Statement\" \"Considered Options\" \"Decision\" \"Consequences\")\n    \n    all_sections_present=true\n    for section in \"${required_sections[@]}\"; do\n        if grep -q \"$section\" \"$template_file\"; then\n            echo \"  ✅ Section '$section' present\"\n        else\n            echo \"  ❌ Section '$section' missing\"\n            all_sections_present=false\n            all_tests_passed=false\n        fi\n    done\nelse\n    echo \"  ❌ ADR template missing\"\n    all_sections_present=false\n    all_tests_passed=false\nfi\n\necho \"\"\n\n# Test 2: Data source validation\necho \"📚 Test 2: Data Source Integration\"\nsource_count=$(find \"$project_path/test-data/sources\" -name \"*.md\" | wc -l)\necho \"  📄 Available sources: $source_count\"\n\nif [ $source_count -ge 3 ]; then\n    echo \"  ✅ Sufficient data sources (≥3)\"\nelse\n    echo \"  ❌ Insufficient data sources (<3)\"\n    all_tests_passed=false\nfi\n\necho \"\"\n\n# Test 3: Workflow timing\necho \"⏱️  Test 3: Workflow Performance\"\nstart_time=$(date +%s)\necho \"  📝 Simulating ADR creation workflow...\"\nsleep 1  # Simulate template processing time\nend_time=$(date +%s)\nworkflow_time=$((end_time - start_time))\n\necho \"  ⏱️  Workflow completion time: ${workflow_time}s\"\nif [ $workflow_time -le 10 ]; then\n    echo \"  ✅ Workflow time acceptable\"\nelse\n    echo \"  ❌ Workflow time excessive\"\n    all_tests_passed=false\nfi\n\necho \"\"\n\n# Generate test report\necho \"📊 Generating test report...\"\nmkdir -p \"$test_results_path\"\n\nreport_file=\"$test_results_path/adr-workflow-test-$(date +%Y%m%d_%H%M%S).md\"\n\ncat > \"$report_file\" << EOFR\n# ADR Workflow Test Report\n\nGenerated: $(date -Iseconds)\nProject: $(basename \"$project_path\")\nTest Type: ADR Workflow Validation\n\n## Test Results Summary\n\n### Template Validation\n- Template Present: $([ -f \"$project_path/templates/ADR-Enhanced.md\" ] && echo \"✅ Pass\" || echo \"❌ Fail\")\n- All Sections Present: $([ \"$all_sections_present\" = true ] && echo \"✅ Pass\" || echo \"❌ Fail\")\n\n### Data Source Integration  \n- Source Count: $source_count\n- Sufficient Sources: $([ $source_count -ge 3 ] && echo \"✅ Pass\" || echo \"❌ Fail\")\n\n### Performance\n- Workflow Time: ${workflow_time}s\n- Performance Acceptable: $([ $workflow_time -le 10 ] && echo \"✅ Pass\" || echo \"❌ Fail\")\n\n## Overall Assessment\n\n$([ \"$all_tests_passed\" = true ] && echo \"✅ ADR workflow test PASSED - Template ready for production\" || echo \"❌ ADR workflow test FAILED - Issues need resolution\")\n\n## Recommendations\n\n$([ \"$all_sections_present\" != true ] && echo \"- ⚠️ Fix missing template sections before production use\")\n$([ $source_count -lt 3 ] && echo \"- ⚠️ Ensure minimum 3 data sources for quality decisions\")\n$([ $workflow_time -gt 10 ] && echo \"- ⚠️ Optimize template for better workflow performance\")\n$([ \"$all_tests_passed\" = true ] && echo \"- ✅ Template validated and ready for Cortex production deployment\")\n\n## Test Data\n\n### Available Test Sources\nEOFR\n\n# Add source details to report\nfor source_file in \"$project_path/test-data/sources\"/*.md; do\n    if [ -f \"$source_file\" ]; then\n        source_name=$(basename \"$source_file\" .md)\n        echo \"- $source_name\" >> \"$report_file\"\n    fi\ndone\n\ncat >> \"$report_file\" << EOFR\n\n### Test Scenario\n- Decision: Test Database Technology Selection\n- Options Evaluated: 3 (PostgreSQL, MongoDB, Redis)\n- Expected Confidence: 78%\n- Decision Factors: 4 primary factors identified\n\n---\n*Generated by Cortex Test Framework | ADR Workflow Validation*\nEOFR\n\necho \"✅ Test completed\"\necho \"📄 Report saved: $report_file\"\necho \"\"\necho \"📊 Test Summary: $([ \"$all_tests_passed\" = true ] && echo \"PASSED\" || echo \"FAILED\")\"\n\n# Return appropriate exit code\n$([ \"$all_tests_passed\" = true ] && exit 0 || exit 1)\nEOF\n\nchmod +x \"$project_path/run-adr-test.sh\"\n\necho \"✅ ADR workflow test project setup completed\"\necho \"📁 Project path: $project_path\"\necho \"🧪 Run test with: $project_path/run-adr-test.sh\"\necho \"📊 Results will be saved in: $project_path/results/\"\n