#!/bin/bash\n# Setup script for Project Workspace testing\n\nproject_name=\"$1\"\nproject_path=\"$2\"\ncortex_path=\"/Users/simonjanke/Projects/cortex\"\n\necho \"üèóÔ∏è  Setting up Project Workspace test: $project_name\"\n\n# Copy Project Workspace template from Cortex\nif [ -f \"$cortex_path/00-Templates/Project-Workspace.md\" ]; then\n    cp \"$cortex_path/00-Templates/Project-Workspace.md\" \"$project_path/templates/\"\nelse\n    # Create a basic Project Workspace template for testing\n    cat > \"$project_path/templates/Project-Workspace.md\" << 'EOF'\n# {{PROJECT_NAME}} - Project Workspace\n\n*Cortex v2.0 Hybrid-Workspace f√ºr isolierte Projekt-Organisation*\n\n## üìã **Project-Metadata**\n**Project-Name**: {{PROJECT_NAME}}\n**Project-Type**: {{PROJECT_TYPE}}\n**Start-Date**: {{START_DATE}}\n**Status**: {{STATUS}}\n**Owner**: {{OWNER}}\n**Priority**: {{PRIORITY}}\n\n## üéØ **Project-Scope & Objectives**\n\n### **Primary-Objective**\n{{PRIMARY_OBJECTIVE}}\n\n### **Success-Criteria**\n- [ ] {{SUCCESS_CRITERION_1}}\n- [ ] {{SUCCESS_CRITERION_2}}\n- [ ] {{SUCCESS_CRITERION_3}}\n\n## üìä **Project-Resources**\n\n### **Team & Roles**\n- **Project-Lead**: {{PROJECT_LEAD}}\n- **Team-Members**: {{TEAM_MEMBERS}}\n- **Stakeholders**: {{STAKEHOLDERS}}\n\n### **Resource-Allocation**\n- **Timeline**: {{TIMELINE}}\n- **Budget**: {{BUDGET}}\n- **Tools**: {{TOOLS}}\n\n## üîó **Cross-Project-Links**\n\n### **Dependencies**\n- [[{{DEPENDENCY_1}}]]: {{DEPENDENCY_DESCRIPTION}}\n- [[{{DEPENDENCY_2}}]]: {{DEPENDENCY_DESCRIPTION}}\n\n### **Related-Projects**\n- [[{{RELATED_PROJECT_1}}]]: {{RELATIONSHIP_DESCRIPTION}}\n\n## üìà **Progress-Tracking**\n\n### **Milestones**\n- [ ] **Milestone 1**: {{MILESTONE_1}} ({{DATE_1}})\n- [ ] **Milestone 2**: {{MILESTONE_2}} ({{DATE_2}})\n- [ ] **Milestone 3**: {{MILESTONE_3}} ({{DATE_3}})\n\n### **Current-Status**\n**Phase**: {{CURRENT_PHASE}}\n**Progress**: {{PROGRESS_PERCENTAGE}}%\n**Next-Actions**: {{NEXT_ACTIONS}}\n\n## üìö **Documentation-Links**\n\n### **Project-Documentation**\n- [[{{PROJECT_PLAN}}]]: Detailed project planning\n- [[{{REQUIREMENTS}}]]: Functional and technical requirements\n- [[{{ARCHITECTURE}}]]: System architecture decisions\n\n### **Decision-Records**\n- [[{{ADR_1}}]]: {{DECISION_DESCRIPTION}}\n- [[{{ADR_2}}]]: {{DECISION_DESCRIPTION}}\n\n---\n*Cortex v2.0 | Hybrid-Workspace | Project-Encapsulation*\nEOF\nfi\n\n# Create test scenario\ncat > \"$project_path/test-data/workspace-scenario.yaml\" << EOF\nscenario_name: \"Project Workspace Validation\"\ndescription: \"Test project workspace template functionality\"\ntest_project:\n  name: \"E-Commerce-Platform-Redesign\"\n  type: \"Software Development\"\n  start_date: \"2025-08-10\"\n  status: \"Planning\"\n  owner: \"Test Team Lead\"\n  priority: \"High\"\n  primary_objective: \"Redesign e-commerce platform for improved performance and user experience\"\n  success_criteria:\n    - \"Improve page load time by 40%\"\n    - \"Increase conversion rate by 15%\"\n    - \"Achieve 99.9% uptime\"\n  timeline: \"6 months\"\n  budget: \"‚Ç¨150,000\"\n  team_size: 8\n  dependencies:\n    - \"Legacy-System-Migration\"\n    - \"User-Authentication-Service\"\n  related_projects:\n    - \"Mobile-App-Development\"\n    - \"Payment-Gateway-Integration\"\nEOF\n\n# Create test execution script\ncat > \"$project_path/run-workspace-test.sh\" << 'EOF'\n#!/bin/bash\n# Project Workspace Test Execution\n\nproject_path=\"$(dirname \"$0\")\"\ntest_results_path=\"$project_path/results\"\n\necho \"üß™ Running Project Workspace Test\"\necho \"üìÅ Project: $(basename \"$project_path\")\"\necho \"\"\n\nall_tests_passed=true\n\n# Test 1: Template structure validation\necho \"üìã Test 1: Template Structure Validation\"\nif [ -f \"$project_path/templates/Project-Workspace.md\" ]; then\n    echo \"  ‚úÖ Project Workspace template present\"\n    \n    template_file=\"$project_path/templates/Project-Workspace.md\"\n    required_sections=(\"Project-Metadata\" \"Project-Scope\" \"Success-Criteria\" \"Progress-Tracking\" \"Cross-Project-Links\")\n    \n    all_sections_present=true\n    for section in \"${required_sections[@]}\"; do\n        if grep -q \"$section\" \"$template_file\"; then\n            echo \"  ‚úÖ Section '$section' present\"\n        else\n            echo \"  ‚ùå Section '$section' missing\"\n            all_sections_present=false\n            all_tests_passed=false\n        fi\n    done\nelse\n    echo \"  ‚ùå Project Workspace template missing\"\n    all_sections_present=false\n    all_tests_passed=false\nfi\n\necho \"\"\n\n# Test 2: Template variable validation\necho \"üîß Test 2: Template Variables Validation\"\nif [ -f \"$project_path/templates/Project-Workspace.md\" ]; then\n    template_file=\"$project_path/templates/Project-Workspace.md\"\n    required_variables=(\"PROJECT_NAME\" \"PROJECT_TYPE\" \"START_DATE\" \"STATUS\" \"OWNER\" \"PRIORITY\")\n    \n    all_variables_present=true\n    for variable in \"${required_variables[@]}\"; do\n        if grep -q \"{{$variable}}\" \"$template_file\"; then\n            echo \"  ‚úÖ Variable '{{$variable}}' present\"\n        else\n            echo \"  ‚ùå Variable '{{$variable}}' missing\"\n            all_variables_present=false\n            all_tests_passed=false\n        fi\n    done\n    \n    if [ \"$all_variables_present\" = true ]; then\n        echo \"  ‚úÖ All required template variables present\"\n    fi\nfi\n\necho \"\"\n\n# Test 3: Cross-project linking structure\necho \"üîó Test 3: Cross-Project Linking Structure\"\nif [ -f \"$project_path/templates/Project-Workspace.md\" ]; then\n    template_file=\"$project_path/templates/Project-Workspace.md\"\n    \n    if grep -q \"Cross-Project-Links\" \"$template_file\" && grep -q \"Dependencies\" \"$template_file\" && grep -q \"Related-Projects\" \"$template_file\"; then\n        echo \"  ‚úÖ Cross-project linking structure present\"\n    else\n        echo \"  ‚ùå Cross-project linking structure incomplete\"\n        all_tests_passed=false\n    fi\nfi\n\necho \"\"\n\n# Test 4: Progress tracking capabilities\necho \"üìà Test 4: Progress Tracking Validation\"\nif [ -f \"$project_path/templates/Project-Workspace.md\" ]; then\n    template_file=\"$project_path/templates/Project-Workspace.md\"\n    \n    if grep -q \"Progress-Tracking\" \"$template_file\" && grep -q \"Milestones\" \"$template_file\" && grep -q \"Current-Status\" \"$template_file\"; then\n        echo \"  ‚úÖ Progress tracking structure present\"\n    else\n        echo \"  ‚ùå Progress tracking structure incomplete\"\n        all_tests_passed=false\n    fi\nfi\n\necho \"\"\n\n# Test 5: Template instantiation test\necho \"üéØ Test 5: Template Instantiation Test\"\nif [ -f \"$project_path/test-data/workspace-scenario.yaml\" ]; then\n    echo \"  ‚úÖ Test scenario data available\"\n    \n    # Create a test instance of the template\n    mkdir -p \"$project_path/results/test-instance\"\n    \n    # Simulate template instantiation\n    cp \"$project_path/templates/Project-Workspace.md\" \"$project_path/results/test-instance/Test-Project-Workspace.md\"\n    \n    # Replace some basic variables for testing\n    sed -i '' 's/{{PROJECT_NAME}}/E-Commerce-Platform-Redesign/g' \"$project_path/results/test-instance/Test-Project-Workspace.md\"\n    sed -i '' 's/{{PROJECT_TYPE}}/Software Development/g' \"$project_path/results/test-instance/Test-Project-Workspace.md\"\n    sed -i '' 's/{{START_DATE}}/2025-08-10/g' \"$project_path/results/test-instance/Test-Project-Workspace.md\"\n    \n    echo \"  ‚úÖ Template instantiation successful\"\nelse\n    echo \"  ‚ùå Test scenario data missing\"\n    all_tests_passed=false\nfi\n\necho \"\"\n\n# Generate test report\necho \"üìä Generating test report...\"\nmkdir -p \"$test_results_path\"\n\nreport_file=\"$test_results_path/workspace-test-$(date +%Y%m%d_%H%M%S).md\"\n\ncat > \"$report_file\" << EOFR\n# Project Workspace Test Report\n\nGenerated: $(date -Iseconds)\nProject: $(basename \"$project_path\")\nTest Type: Project Workspace Template Validation\n\n## Test Results Summary\n\n### Template Structure\n- Template Present: $([ -f \"$project_path/templates/Project-Workspace.md\" ] && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n- All Sections Present: $([ \"$all_sections_present\" = true ] && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n\n### Template Variables\n- All Variables Present: $([ \"$all_variables_present\" = true ] && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n\n### Cross-Project Features\n- Linking Structure: $(grep -q \"Cross-Project-Links\" \"$project_path/templates/Project-Workspace.md\" 2>/dev/null && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n- Progress Tracking: $(grep -q \"Progress-Tracking\" \"$project_path/templates/Project-Workspace.md\" 2>/dev/null && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n\n### Template Instantiation\n- Instantiation Test: $([ -f \"$project_path/results/test-instance/Test-Project-Workspace.md\" ] && echo \"‚úÖ Pass\" || echo \"‚ùå Fail\")\n\n## Overall Assessment\n\n$([ \"$all_tests_passed\" = true ] && echo \"‚úÖ Project Workspace template test PASSED - Template ready for production\" || echo \"‚ùå Project Workspace template test FAILED - Issues need resolution\")\n\n## Recommendations\n\n$([ \"$all_sections_present\" != true ] && echo \"- ‚ö†Ô∏è Add missing template sections for complete functionality\")\n$([ \"$all_variables_present\" != true ] && echo \"- ‚ö†Ô∏è Add missing template variables for proper instantiation\")\n$([ \"$all_tests_passed\" = true ] && echo \"- ‚úÖ Template validated and ready for Cortex production deployment\")\n\n## Test Artifacts\n\n### Generated Test Instance\n- Location: results/test-instance/Test-Project-Workspace.md\n- Status: $([ -f \"$project_path/results/test-instance/Test-Project-Workspace.md\" ] && echo \"Created successfully\" || echo \"Creation failed\")\n\n### Test Scenario\n- Project: E-Commerce-Platform-Redesign\n- Type: Software Development\n- Timeline: 6 months\n- Team Size: 8 members\n- Budget: ‚Ç¨150,000\n\n---\n*Generated by Cortex Test Framework | Project Workspace Validation*\nEOFR\n\necho \"‚úÖ Test completed\"\necho \"üìÑ Report saved: $report_file\"\necho \"\"\necho \"üìä Test Summary: $([ \"$all_tests_passed\" = true ] && echo \"PASSED\" || echo \"FAILED\")\"\n\n# Return appropriate exit code\n$([ \"$all_tests_passed\" = true ] && exit 0 || exit 1)\nEOF\n\nchmod +x \"$project_path/run-workspace-test.sh\"\n\necho \"‚úÖ Project Workspace test setup completed\"\necho \"üìÅ Project path: $project_path\"\necho \"üß™ Run test with: $project_path/run-workspace-test.sh\"\necho \"üìä Results will be saved in: $project_path/results/\"\n