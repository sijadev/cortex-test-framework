#!/bin/zsh
# Cortex Test Framework - Global Command
# Usage: cortex-test [command] [args...]

# Configuration
CORTEX_TEST_FRAMEWORK="/Users/simonjanke/Projects/cortex-test-framework"
TEST_MANAGER="$CORTEX_TEST_FRAMEWORK/test-manager-enhanced.sh"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

function show_cortex_test_help() {
    echo "${BLUE}üß™ Cortex Test Framework - Global Command${NC}"
    echo ""
    echo "${CYAN}Usage:${NC} cortex-test [command] [args...]"
    echo ""
    echo "${YELLOW}üìã Framework Commands:${NC}"
    echo "  ${GREEN}cortex-test status${NC}                    - Show framework status"
    echo "  ${GREEN}cortex-test list${NC}                      - List active test projects"
    echo ""
    echo "${YELLOW}üêç Python Integration:${NC}"
    echo "  ${GREEN}cortex-test python unit${NC}               - Run Python unit tests"
    echo "  ${GREEN}cortex-test python integration${NC}        - Run Python integration tests"
    echo "  ${GREEN}cortex-test python performance${NC}        - Run Python performance tests"
    echo "  ${GREEN}cortex-test python all${NC}                - Run all Python tests"
    echo "  ${GREEN}cortex-test python-status${NC}             - Show Python test system status"
    echo "  ${GREEN}cortex-test install-deps${NC}              - Install Python test dependencies"
    echo ""
    echo "${YELLOW}üöÄ Unified Testing:${NC}"
    echo "  ${GREEN}cortex-test unified${NC}                   - Run all tests (Python + Framework)"
    echo ""
    echo "${YELLOW}üìä Quick Commands:${NC}"
    echo "  ${GREEN}cortex-test smoke${NC}                     - Quick smoke test"
    echo "  ${GREEN}cortex-test full${NC}                      - Full test suite"
    echo "  ${GREEN}cortex-test check${NC}                     - Health check"
    echo ""
    echo "${YELLOW}üí° Examples:${NC}"
    echo "  ${CYAN}cortex-test python unit${NC}               ${PURPLE}# Run Python unit tests${NC}"
    echo "  ${CYAN}cortex-test unified${NC}                   ${PURPLE}# Run everything${NC}"
    echo "  ${CYAN}cortex-test status${NC}                    ${PURPLE}# Check system status${NC}"
    echo "  ${CYAN}cortex-test check${NC}                     ${PURPLE}# Quick health check${NC}"
    echo ""
    echo "${BLUE}üîó Framework Path:${NC} $CORTEX_TEST_FRAMEWORK"
}

function check_framework() {
    if [ ! -d "$CORTEX_TEST_FRAMEWORK" ]; then
        echo "${RED}‚ùå Cortex Test Framework not found at: $CORTEX_TEST_FRAMEWORK${NC}"
        return 1
    fi
    
    if [ ! -f "$TEST_MANAGER" ]; then
        echo "${RED}‚ùå Test manager not found at: $TEST_MANAGER${NC}"
        return 1
    fi
    
    return 0
}

function cortex_test_smoke() {
    echo "${BLUE}üí® Running Cortex Test Framework Smoke Test${NC}"
    echo "=============================================="
    
    if ! check_framework; then
        return 1
    fi
    
    echo ""
    echo "${CYAN}üìã Framework Health Check...${NC}"
    
    # Check framework structure
    local required_dirs=("test-projects" "test-results" "setup-scripts" "teardown-scripts")
    local health_ok=true
    
    for dir in "${required_dirs[@]}"; do
        if [ -d "$CORTEX_TEST_FRAMEWORK/$dir" ]; then
            echo "  ${GREEN}‚úÖ $dir${NC}"
        else
            echo "  ${RED}‚ùå $dir missing${NC}"
            health_ok=false
        fi
    done
    
    # Check Python bridge
    if [ -f "$CORTEX_TEST_FRAMEWORK/cortex_test_bridge.py" ]; then
        echo "  ${GREEN}‚úÖ Python bridge${NC}"
    else
        echo "  ${RED}‚ùå Python bridge missing${NC}"
        health_ok=false
    fi
    
    # Quick template check
    local adr_template="$CORTEX_TEST_FRAMEWORK/test-projects/adr-template-validation/templates/ADR-Enhanced.md"
    if [ -f "$adr_template" ]; then
        echo "  ${GREEN}‚úÖ ADR template${NC}"
    else
        echo "  ${RED}‚ùå ADR template missing${NC}"
        health_ok=false
    fi
    
    echo ""
    if [ "$health_ok" = true ]; then
        echo "${GREEN}üéâ Smoke Test PASSED - Framework is healthy!${NC}"
        return 0
    else
        echo "${RED}‚ùå Smoke Test FAILED - Framework has issues${NC}"
        return 1
    fi
}

function cortex_test_full() {
    echo "${BLUE}üöÄ Running Full Cortex Test Suite${NC}"
    echo "=================================="
    
    if ! check_framework; then
        return 1
    fi
    
    echo ""
    echo "${CYAN}Running unified test suite...${NC}"
    bash "$TEST_MANAGER" unified
}

function cortex_test_check() {
    echo "${BLUE}üîç Cortex Test Framework Quick Check${NC}"
    echo "====================================="
    
    if ! check_framework; then
        return 1
    fi
    
    echo ""
    echo "${CYAN}üìä System Status:${NC}"
    bash "$TEST_MANAGER" status
    
    echo ""
    echo "${CYAN}üêç Python Test Status:${NC}"
    bash "$TEST_MANAGER" python-status
}

# Main command dispatcher
if [ $# -eq 0 ]; then
    show_cortex_test_help
    exit 0
fi

# Check if framework exists
if ! check_framework; then
    echo ""
    echo "${YELLOW}üí° Tip:${NC} Make sure the Cortex Test Framework is properly installed"
    echo "${CYAN}   Location:${NC} $CORTEX_TEST_FRAMEWORK"
    exit 1
fi

# Process commands
case "$1" in
    help|--help|-h)
        show_cortex_test_help
        ;;
    smoke)
        cortex_test_smoke
        ;;
    full)
        cortex_test_full
        ;;
    check)
        cortex_test_check
        ;;
    *)
        # Pass all other commands directly to test manager
        echo "${BLUE}üß™ Cortex Test Framework${NC}"
        echo ""
        bash "$TEST_MANAGER" "$@"
        ;;
esac
